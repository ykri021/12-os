OUTPUT_FORMAT("elf32-h8300")
OUTPUT_ARCH(h8300h)
ENTRY("_start")

/* MEMORYコマンドで、各メモリ領域を定義する */
MEMORY
{
    ramall(rwx)         : o = 0xffbf20, l = 0x004000 /* 16KB */
    ram(rwx)            : o = 0xffc020,  l = 0x003f00
    stack(rw)           : o = 0xffff00, l = 0x000000 /* end of RAM */
}

SECTIONS
{
    /* textセクションの配置。各オブジェクトファイルの.textセクションの内容が集められる。
    * ロケーションカウンタは、.vectorsセクションの配置後に、.vectorsセクションのぶんだけ自動的に増加し、vectorsセクションの末尾を指している。
    * .textセクションは.vectorsセクションの直後に配置されることになる。
    */
    .text : {
            _text_start = . ; /* .textセクションの先頭を指すシンボルを配置 */
            *(.text)
            _etext = . ; /* .textセクションの終端を指すシンボルを配置 */
    } > ram /* .textセクションの配置先をRAMに変更する */

    /* const定義した変数や文字列リテラルなどを配置 */
    .rodata : {
            _rodata_start = . ;
            *(.strings)
            *(.rodata)
            *(.rodata.*)
            _erodata = . ;
    } > ram /* .rodataセクションの配置先をRAMに変更する */

    .data : {
            _data_start = . ;
            *(.data)
            _edata = . ;
    } > ram /* .dataセクションの配置先をRAMに変更する */

    .bss : {
            _bss_start = . ;
            *(.bss)
            *(COMMON)
            _ebss = . ;
    } > ram /* .bssセクションの配置先をRAMに変更する */

    . = ALIGN(4); /* 4バイト・アラインメント */
    _end = . ; /* セクションの終端に_endシンボルを配置する */

    .stack : {
            _stack = . ; /* スタックを指すシンボルを配置する */
    } > stack
}